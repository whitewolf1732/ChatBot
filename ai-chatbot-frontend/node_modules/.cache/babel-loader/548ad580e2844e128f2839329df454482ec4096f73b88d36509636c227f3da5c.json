{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import\"./Profile.css\";// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=()=>{const navigate=useNavigate();const token=localStorage.getItem(\"token\");const[user,setUser]=useState({name:\"\",email:\"\"});const[currentPassword,setCurrentPassword]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const[error,setError]=useState(\"\");const[success,setSuccess]=useState(\"\");// Fetch user details on component mount\nuseEffect(()=>{const fetchUserDetails=async()=>{try{const res=await axios.get(\"https://chatbot-tzms.onrender.com/api/user/profile\",{headers:{Authorization:`Bearer ${token}`}});setUser(res.data);// Ensure the backend returns { name, email }\n}catch(error){console.error(\"Failed to fetch user details\",error);}};fetchUserDetails();},[token]);const handleLogout=async()=>{try{await axios.post(\"https://chatbot-tzms.onrender.com/api/auth/logout\",{},{headers:{Authorization:`Bearer ${token}`}});localStorage.removeItem(\"token\");localStorage.removeItem(\"userId\");navigate(\"/\");}catch(error){console.error(\"Logout failed\",error);}};const handlePasswordUpdate=async e=>{e.preventDefault();if(newPassword!==confirmPassword){setError(\"New passwords do not match\");return;}try{await axios.put(\"https://chatbot-tzms.onrender.com/api/user/edit-password\",{currentPassword,newPassword},{headers:{Authorization:`Bearer ${token}`}});setSuccess(\"Password updated successfully\");setError(\"\");setCurrentPassword(\"\");setNewPassword(\"\");setConfirmPassword(\"\");}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Failed to update password\");setSuccess(\"\");}};const handleDeleteAccount=async()=>{if(window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\")){try{await axios.delete(\"https://chatbot-tzms.onrender.com/api/user/delete-account\",{headers:{Authorization:`Bearer ${token}`}});localStorage.removeItem(\"token\");localStorage.removeItem(\"userId\");navigate(\"/\");}catch(error){var _error$response2,_error$response2$data;setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Failed to delete account\");}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",user.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",user.email]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"password-form\",onSubmit:handlePasswordUpdate,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Change Password\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:success}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Current Password\",value:currentPassword,onChange:e=>setCurrentPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"New Password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm New Password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"logout-button\",onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:handleDeleteAccount,children:\"Delete Account\"})]})]});};export default Profile;","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Profile","navigate","token","localStorage","getItem","user","setUser","name","email","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","fetchUserDetails","res","get","headers","Authorization","data","console","handleLogout","post","removeItem","handlePasswordUpdate","e","preventDefault","put","_error$response","_error$response$data","response","message","handleDeleteAccount","window","confirm","delete","_error$response2","_error$response2$data","className","children","onSubmit","type","placeholder","value","onChange","target","required","onClick"],"sources":["D:/ChatBot/ai-chatbot-frontend/src/pages/Profile.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Profile.css\"; // Import the CSS file\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  // Fetch user details on component mount\r\n  useEffect(() => {\r\n    const fetchUserDetails = async () => {\r\n      try {\r\n        const res = await axios.get(\"https://chatbot-tzms.onrender.com/api/user/profile\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setUser(res.data); // Ensure the backend returns { name, email }\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch user details\", error);\r\n      }\r\n    };\r\n    fetchUserDetails();\r\n  }, [token]);\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axios.post(\"https://chatbot-tzms.onrender.com/api/auth/logout\", {}, { headers: { Authorization: `Bearer ${token}` } });\r\n\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"userId\");\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Logout failed\", error);\r\n    }\r\n  };\r\n\r\n  const handlePasswordUpdate = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      setError(\"New passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.put(\r\n        \"https://chatbot-tzms.onrender.com/api/user/edit-password\",\r\n        { currentPassword, newPassword },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setSuccess(\"Password updated successfully\");\r\n      setError(\"\");\r\n      setCurrentPassword(\"\");\r\n      setNewPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || \"Failed to update password\");\r\n      setSuccess(\"\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\")) {\r\n      try {\r\n        await axios.delete(\"https://chatbot-tzms.onrender.com/api/user/delete-account\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"userId\");\r\n        navigate(\"/\");\r\n      } catch (error) {\r\n        setError(error.response?.data?.message || \"Failed to delete account\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>Profile</h2>\r\n      <div className=\"user-details\">\r\n        <p>\r\n          <strong>Name:</strong> {user.name}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {user.email}\r\n        </p>\r\n      </div>\r\n\r\n      <form className=\"password-form\" onSubmit={handlePasswordUpdate}>\r\n        <h3>Change Password</h3>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {success && <p className=\"success\">{success}</p>}\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Current Password\"\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Update Password</button>\r\n      </form>\r\n\r\n      <div className=\"actions\">\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n        <button className=\"delete-button\" onClick={handleDeleteAccount}>\r\n          Delete Account\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}